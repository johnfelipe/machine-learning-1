{"version":3,"sources":["webpack:///./src/templates/tensorflow-flower-classification.js"],"names":["module","exports","index","type","title","description","data","remoteFile","input_ref","header","xAxis","yAxis","zAxis","lAxis","sampleSplit","shuffle","trainingRatio","evaluationRatio","inputUnits","key","checked","label","outputUnits","indexLabel","layerSize","units","activation","epochs","batchSize","validationSplit","inputUnitsNormalize","outputUnitsNormalize","compilerOptimizerSelected","compilerLossSelected"],"mappings":"mGAAAA,EAAOC,QAAU,CACf,CACEC,MAAO,aACPC,KAAM,gBACNC,MAAO,iBACPC,YACE,0LAGFC,KAAM,CACJC,WAAY,0FAGhB,CACEL,MAAO,aACPM,UAAW,aACXL,KAAM,qBACNG,KAAM,CACJG,QAAQ,EACRC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,IAGX,CACEX,MAAO,aACPM,UAAW,aACXL,KAAM,kBACNC,MAAO,mBACPE,KAAM,CACJQ,YAAa,EACbC,SAAS,EACTC,cAAe,GACfC,gBAAiB,GACjBC,WAAY,CACV,CACEC,IAAK,EACLC,SAAS,EACTC,MAAO,YAET,CACEF,IAAK,EACLC,SAAS,EACTC,MAAO,YAET,CACEF,IAAK,EACLC,SAAS,EACTC,MAAO,YAET,CACEF,IAAK,EACLC,SAAS,EACTC,MAAO,YAET,CACEF,IAAK,EACLC,SAAS,EACTC,MAAO,aAGXC,YAAa,CACX,CACEH,IAAK,EACLC,SAAS,EACTC,MAAO,YAET,CACEF,IAAK,EACLC,SAAS,EACTC,MAAO,YAET,CACEF,IAAK,EACLC,SAAS,EACTC,MAAO,YAET,CACEF,IAAK,EACLC,SAAS,EACTC,MAAO,YAET,CACEF,IAAK,EACLC,SAAS,EACTC,MAAO,aAGXE,WAAY,IAGhB,CACErB,MAAO,aACPM,UAAW,aACXL,KAAM,iBACNC,MAAO,sCACPC,YAAa,GACbC,KAAM,CACJkB,UAAW,EACXC,MAAO,CAAC,GAAI,GAAI,GAChBC,WAAY,CAAC,OAAQ,OAAQ,aAGjC,CACExB,MAAO,aACPM,UAAW,aACXL,KAAM,kBACNC,MAAO,cACPC,YAAa,GACbC,KAAM,CACJqB,OAAQ,IACRC,UAAW,GACXC,gBAAiB,GACjBd,SAAS,EACTe,qBAAqB,EACrBC,sBAAsB,EACtBC,0BAA2B,SAC3BC,qBAAsB,kCAG1B,CACE/B,MAAO,aACPM,UAAW,aACXL,KAAM,mBACNC,MAAO,mBACPC,YACE,wLAEFC,KAAM,CACJkB,UAAW,IAGf,CACEtB,MAAO,aACPM,UAAW,aACXL,KAAM,qBACNG,KAAM,CACJI,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO","file":"js/chunk-2d0baa7f.45cbb322.js","sourcesContent":["module.exports = [\n  {\n    index: 'pipeline_0',\n    type: 'DatasetLoader',\n    title: 'Dataset Loader',\n    description:\n      'This pipeline uses the iris dataset from UCI Machile Learning ' +\n      '[repository](https://archive.ics.uci.edu/ml/datasets/iris). It ' +\n      'uses **tensorflow** to create a model to classify flowers.',\n    data: {\n      remoteFile: 'https://raw.githubusercontent.com/pandas-dev/pandas/master/pandas/tests/data/iris.csv'\n    }\n  },\n  {\n    index: 'pipeline_1',\n    input_ref: 'pipeline_0',\n    type: 'DatasetTableViewer',\n    data: {\n      header: true,\n      xAxis: 0,\n      yAxis: 1,\n      zAxis: 2,\n      lAxis: 4\n    }\n  },\n  {\n    index: 'pipeline_2',\n    input_ref: 'pipeline_1',\n    type: 'DatasetSplitter',\n    title: 'Dataset Splitter',\n    data: {\n      sampleSplit: 1,\n      shuffle: true,\n      trainingRatio: 0.7,\n      evaluationRatio: 0.3,\n      inputUnits: [\n        {\n          key: 0,\n          checked: true,\n          label: 'Column 0'\n        },\n        {\n          key: 1,\n          checked: true,\n          label: 'Column 1'\n        },\n        {\n          key: 2,\n          checked: true,\n          label: 'Column 2'\n        },\n        {\n          key: 3,\n          checked: true,\n          label: 'Column 3'\n        },\n        {\n          key: 4,\n          checked: false,\n          label: 'Column 4'\n        }\n      ],\n      outputUnits: [\n        {\n          key: 0,\n          checked: false,\n          label: 'Column 0'\n        },\n        {\n          key: 1,\n          checked: false,\n          label: 'Column 1'\n        },\n        {\n          key: 2,\n          checked: false,\n          label: 'Column 2'\n        },\n        {\n          key: 3,\n          checked: false,\n          label: 'Column 3'\n        },\n        {\n          key: 4,\n          checked: true,\n          label: 'Column 4'\n        }\n      ],\n      indexLabel: 4\n    }\n  },\n  {\n    index: 'pipeline_3',\n    input_ref: 'pipeline_2',\n    type: 'TSModelBuilder',\n    title: 'Create model to classify the flower',\n    description: '',\n    data: {\n      layerSize: 3,\n      units: [10, 10, 3],\n      activation: ['relu', 'relu', 'softmax']\n    }\n  },\n  {\n    index: 'pipeline_4',\n    input_ref: 'pipeline_3',\n    type: 'TSModelCompiler',\n    title: 'Train model',\n    description: '',\n    data: {\n      epochs: 200,\n      batchSize: 32,\n      validationSplit: 0.1,\n      shuffle: true,\n      inputUnitsNormalize: false,\n      outputUnitsNormalize: false,\n      compilerOptimizerSelected: 'adamax',\n      compilerLossSelected: 'sparseCategoricalCrossentropy'\n    }\n  },\n  {\n    index: 'pipeline_5',\n    input_ref: 'pipeline_4',\n    type: 'TSModelPredictor',\n    title: 'Make Predictions',\n    description:\n      'The predictions are run over the evaluation dataset, the class accuracy and confusion matrix ' +\n      'can be viewed to evaluate if the training model is preducting the categories as desired.',\n    data: {\n      layerSize: 3\n    }\n  },\n  {\n    index: 'pipeline_6',\n    input_ref: 'pipeline_5',\n    type: 'DatasetTableViewer',\n    data: {\n      xAxis: 7,\n      yAxis: 8,\n      zAxis: 9,\n      lAxis: 10\n    }\n  }\n]\n"],"sourceRoot":""}