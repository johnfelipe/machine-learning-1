{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./src/components/TSModelPredictor.vue?ac0f","webpack:///./src/components/TSModelPredictor.vue?800b","webpack:///./src/components/TSModelPredictor.vue","webpack:///src/components/TSModelPredictor.vue"],"names":["$","$find","find","addToUnscopables","arrayMethodUsesToLength","FIND","SKIPS_HOLES","USES_TO_LENGTH","Array","target","proto","forced","callbackfn","this","arguments","length","undefined","render","_vm","_h","$createElement","_c","_self","attrs","component","loading","on","$event","staticClass","plugActionDisabled","plugAction","trashActionDisabled","trashAction","directives","name","rawName","value","index","expression","imageActionDisabled","onToggleToolbar","toggleIcon","_v","indexMax","editActionDisabled","model","callback","$$v","layerSize","dataSize","indexFormatter","indexSerie","staticStyle","onShowModal","ref","class","scatterPlot","perClassAccuracy","confusionMatrix","seriesPlot","scopedSlots","_u","key","fn","proxy","_e","staticRenderFns","components","mixins","data","serializable","imagePage","fileChart","importData","mounted","computed","disabled","global","inputData","normalizationData","layers","isArray","inputShape","watch","next","$options","sockets","onerror","onopen","onmessage","methods","loadPage","x","seriesOutputX","y","seriesOutputY","mode","marker","size","line","width","opacity","type","seriesPredictX","seriesPredictY","scene","xaxis","yaxis","onPrevPage","output","onNextPage","trashActionEvent","inputTensor","dispose","outputTensor","plugActionPost","predictTensor","$tf","tensor","predictData","predictTensorJSON","shape","outputUnitsNormalize","unnormal","evaluation","inputMatrix","training","unshift","outputMatrix","outputShape","loss","outputRow","push","j","outputMatrixSparse","labels","classNamesMap","classNames","from","Set","String","mul","originalValues","predictedValues","predictMatrix","$tfvis","scatterplot","tidy","row","plugActionNext","worker","event","error","terminate","plugActionEnd","console","save","then","io","browserHTTPRequest","$disconnect","plugActionEvent","inputTensorJSON","postMessage"],"mappings":"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","file":"js/chunk-0a711cad.2abbd176.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND);\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('component-layout',{attrs:{\"component\":_vm.component,\"length\":_vm.length,\"loading\":_vm.loading},on:{\"update:component\":function($event){_vm.component=$event},\"update:length\":function($event){_vm.length=$event},\"update:loading\":function($event){_vm.loading=$event}}},[_c('b-form',{staticClass:\"form-toolbar-rtl\",attrs:{\"inline\":\"\"}},[_c('b-button',{attrs:{\"size\":\"badge\",\"disabled\":_vm.plugActionDisabled},on:{\"click\":_vm.plugAction}},[_c('b-icon',{staticClass:\"btn-icon\",attrs:{\"icon\":\"plug\"}})],1),_c('b-button',{attrs:{\"size\":\"badge\",\"disabled\":_vm.trashActionDisabled},on:{\"click\":_vm.trashAction}},[_c('b-icon',{staticClass:\"btn-icon\",attrs:{\"icon\":\"trash\"}})],1),_c('b-button',{directives:[{name:\"b-modal\",rawName:\"v-b-modal\",value:('dataset-view-' + _vm.component.index),expression:\"'dataset-view-' + component.index\"}],attrs:{\"size\":\"badge\",\"disabled\":_vm.imageActionDisabled}},[_c('b-icon',{staticClass:\"btn-icon\",attrs:{\"icon\":\"card-image\"}})],1),_c('b-button',{attrs:{\"size\":\"badge\"},on:{\"click\":_vm.onToggleToolbar}},[_c('b-icon',{attrs:{\"icon\":_vm.toggleIcon}})],1)],1),_c('b-collapse',{attrs:{\"visible\":_vm.toggleIcon === 'caret-up'}},[_c('b-form',{attrs:{\"inline\":\"\"}},[_c('div',{staticClass:\"indexInput\"},[_c('label',[_vm._v(\"Total Layers\")]),_c('b-form-spinbutton',{attrs:{\"min\":\"1\",\"max\":_vm.indexMax,\"placeholder\":\"--\",\"disabled\":_vm.editActionDisabled},model:{value:(_vm.layerSize),callback:function ($$v) {_vm.layerSize=$$v},expression:\"layerSize\"}})],1),_c('div',{staticClass:\"indexInput\"},[_c('label',[_vm._v(\"Label Index\")]),_c('b-form-spinbutton',{attrs:{\"min\":\"-1\",\"max\":_vm.dataSize-1,\"formatter-fn\":_vm.indexFormatter,\"disabled\":_vm.editActionDisabled},model:{value:(_vm.indexSerie),callback:function ($$v) {_vm.indexSerie=$$v},expression:\"indexSerie\"}})],1)])],1),_c('div',{staticStyle:{\"margin-top\":\"8px\"}}),_c('b-modal',{attrs:{\"id\":'dataset-view-' + _vm.component.index,\"title\":\"Dataset View\",\"static\":true,\"hide-footer\":true,\"size\":\"lg\"},on:{\"show\":_vm.onShowModal}},[_c('b-carousel',{ref:\"dataset-view-carousel\",class:'carousel-loading-' + _vm.loading,attrs:{\"interval\":0,\"indicators\":_vm.scatterPlot || _vm.perClassAccuracy || _vm.confusionMatrix,\"controls\":_vm.seriesPlot}},[(_vm.scatterPlot)?_c('b-carousel-slide',{attrs:{\"img-blank\":true},scopedSlots:_vm._u([{key:\"img\",fn:function(){return [_c('div',{ref:\"scatterPlot\"})]},proxy:true}],null,false,3122916720)}):_vm._e(),(_vm.perClassAccuracy)?_c('b-carousel-slide',{attrs:{\"img-blank\":true},scopedSlots:_vm._u([{key:\"img\",fn:function(){return [_c('div',{ref:\"perClassAccuracy\"})]},proxy:true}],null,false,3153054725)}):_vm._e(),(_vm.confusionMatrix)?_c('b-carousel-slide',{attrs:{\"img-blank\":true},scopedSlots:_vm._u([{key:\"img\",fn:function(){return [_c('div',{ref:\"confusionMatrix\"})]},proxy:true}],null,false,3258938016)}):_vm._e(),(_vm.seriesPlot)?_c('b-carousel-slide',{attrs:{\"img-blank\":true},scopedSlots:_vm._u([{key:\"img\",fn:function(){return [_c('div',{ref:\"draw-loading\",staticClass:\"text-center\"},[_c('div',{staticStyle:{\"width\":\"500px\",\"height\":\"400px\",\"margin\":\"0 auto\"}},[_c('div',{staticStyle:{\"position\":\"relative\",\"top\":\"50%\"}},[_c('b-spinner',{attrs:{\"type\":\"grow\"}})],1)])]),_c('div',{ref:\"draw\",staticClass:\"text-center\"})]},proxy:true}],null,false,3504336249)}):_vm._e()],1),_c('footer',{staticClass:\"modal-footer\"})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TSModelPredictor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TSModelPredictor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TSModelPredictor.vue?vue&type=template&id=bfd53892&scoped=true&\"\nimport script from \"./TSModelPredictor.vue?vue&type=script&lang=js&\"\nexport * from \"./TSModelPredictor.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"bfd53892\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <component-layout :component.sync=\"component\" :length.sync=\"length\" :loading.sync=\"loading\">\n    <b-form class=\"form-toolbar-rtl\" inline>\n      <b-button size=\"badge\" @click=\"plugAction\" :disabled=\"plugActionDisabled\">\n        <b-icon icon=\"plug\" class=\"btn-icon\"></b-icon>\n      </b-button>\n      <b-button size=\"badge\" @click=\"trashAction\" :disabled=\"trashActionDisabled\">\n        <b-icon icon=\"trash\" class=\"btn-icon\"></b-icon>\n      </b-button>\n      <b-button\n        size=\"badge\"\n        v-b-modal=\"'dataset-view-' + component.index\"\n        :disabled=\"imageActionDisabled\"\n      >\n        <b-icon icon=\"card-image\" class=\"btn-icon\"></b-icon>\n      </b-button>\n      <b-button size=\"badge\" @click=\"onToggleToolbar\">\n        <b-icon :icon=\"toggleIcon\"></b-icon>\n      </b-button>\n    </b-form>\n\n    <b-collapse :visible=\"toggleIcon === 'caret-up'\">\n      <b-form inline>\n        <div class=\"indexInput\">\n          <label>Total Layers</label>\n          <b-form-spinbutton\n            v-model=\"layerSize\"\n            min=\"1\"\n            :max=\"indexMax\"\n            placeholder=\"--\"\n            :disabled=\"editActionDisabled\"\n          ></b-form-spinbutton>\n        </div>\n\n        <div class=\"indexInput\">\n          <label>Label Index</label>\n          <b-form-spinbutton\n            v-model=\"indexSerie\"\n            min=\"-1\"\n            :max=\"dataSize-1\"\n            :formatter-fn=\"indexFormatter\"\n            :disabled=\"editActionDisabled\"\n          ></b-form-spinbutton>\n        </div>\n      </b-form>\n    </b-collapse>\n    <div style=\"margin-top: 8px;\"></div>\n\n    <b-modal\n      :id=\"'dataset-view-' + component.index\"\n      title=\"Dataset View\"\n      :static=\"true\"\n      :hide-footer=\"true\"\n      size=\"lg\"\n      @show=\"onShowModal\"\n    >\n      <b-carousel\n        :interval=\"0\"\n        :indicators=\"scatterPlot || perClassAccuracy || confusionMatrix\"\n        :controls=\"seriesPlot\"\n        :class=\"'carousel-loading-' + loading\"\n        ref=\"dataset-view-carousel\"\n      >\n        <b-carousel-slide :img-blank=\"true\" v-if=\"scatterPlot\">\n          <template v-slot:img>\n            <div ref=\"scatterPlot\"></div>\n          </template>\n        </b-carousel-slide>\n        <b-carousel-slide :img-blank=\"true\" v-if=\"perClassAccuracy\">\n          <template v-slot:img>\n            <div ref=\"perClassAccuracy\"></div>\n          </template>\n        </b-carousel-slide>\n        <b-carousel-slide :img-blank=\"true\" v-if=\"confusionMatrix\">\n          <template v-slot:img>\n            <div ref=\"confusionMatrix\"></div>\n          </template>\n        </b-carousel-slide>\n        <b-carousel-slide :img-blank=\"true\" v-if=\"seriesPlot\">\n          <template v-slot:img>\n            <div class=\"text-center\" ref=\"draw-loading\">\n              <div style=\"width: 500px; height: 400px; margin: auto; margin: 0 auto;\">\n                <div style=\"position: relative; top: 50%;\">\n                  <b-spinner type=\"grow\"></b-spinner>\n                </div>\n              </div>\n            </div>\n            <div class=\"text-center\" ref=\"draw\"></div>\n          </template>\n        </b-carousel-slide>\n      </b-carousel>\n      <footer class=\"modal-footer\"></footer>\n    </b-modal>\n  </component-layout>\n</template>\n\n<script>\n/**\n * @license\n * Copyright 2020 Rodrigo Oshiro. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport ComponentLayout from './ComponentLayout'\nimport { mixin } from './mixin'\nimport jquery from 'jquery'\nimport lodash from 'lodash'\nimport Plotly from 'plotly.js-dist'\nimport * as utilities from '../config/utilities.js'\n\nexport default {\n  name: 'TSModelPredictor',\n  components: { ComponentLayout },\n  mixins: [mixin],\n  data() {\n    let data = {\n      serializable: ['layerSize', 'indexSerie'],\n      layerSize: 0,\n      indexSerie: -1,\n      imagePage: 0,\n      fileChart: false,\n      scatterPlot: true,\n      perClassAccuracy: true,\n      confusionMatrix: true,\n      seriesPlot: true,\n      toggleIcon: 'caret-up'\n    }\n    return this.importData(data)\n  },\n  mounted() {\n    jquery(this.$refs['dataset-view-carousel'].$el)\n      .find('.carousel-control-prev')\n      .on('click', this.onPrevPage)\n    jquery(this.$refs['dataset-view-carousel'].$el)\n      .find('.carousel-control-next')\n      .on('click', this.onNextPage)\n  },\n  computed: {\n    editActionDisabled() {\n      let disabled = 0\n      disabled |= this.indexMax === 0\n      return disabled === 1\n    },\n    trashActionDisabled() {\n      return this.editActionDisabled\n    },\n    plugActionDisabled() {\n      let disabled = 0\n      disabled |= this.loading === true\n      disabled |= this.global.model === null\n      disabled |= this.inputData === null || this.inputData.normalizationData === undefined\n      disabled |= this.layerSize > this.indexMax\n      return disabled === 1\n    },\n    imageActionDisabled() {\n      let disabled = 0\n      disabled |= this.fileChart === false\n      return disabled === 1\n    },\n    indexMax() {\n      let indexMax = 0\n      if (this.global.model && this.global.model.layers) {\n        indexMax = this.global.model.layers.length\n      }\n      return indexMax\n    },\n    dataSize() {\n      let dataSize = 0\n      if (Array.isArray(this.global.inputShape) && this.global.inputShape.length > 1) {\n        dataSize = this.global.inputShape[0]\n      }\n      return dataSize\n    }\n  },\n  watch: {\n    loading(next, prev) {\n      if (next === false) {\n        delete this.$options.sockets.onerror\n        delete this.$options.sockets.onopen\n        delete this.$options.sockets.onmessage\n      }\n    }\n  },\n  methods: {\n    onToggleToolbar() {\n      if (this.toggleIcon === 'caret-up') {\n        this.toggleIcon = 'caret-down'\n      } else if (this.toggleIcon === 'caret-down') {\n        this.toggleIcon = 'caret-up'\n      }\n    },\n    loadPage() {\n      jquery(this.$refs['draw-loading']).show()\n      jquery(this.$refs['draw']).hide()\n      jquery(this.$refs['draw']).empty()\n      let inputIndex = this.indexSerie\n      let inputSize = this.global.inputShape[0]\n      let outputSize = this.global.outputShape[0]\n      let seriesOutputX = this.global.evaluation.timestamps[this.imagePage]\n      let seriesOutputY = [\n        ...this.output[this.imagePage].slice(0, inputSize).map(x => x[inputIndex])\n      ].concat(this.output[this.imagePage].slice(inputSize, inputSize + outputSize))\n      let seriesPredictX = this.global.evaluation.timestamps[this.imagePage].slice(-outputSize)\n      let seriesPredictY = [\n        ...this.output[this.imagePage].slice(inputSize + outputSize, inputSize + outputSize + outputSize)\n      ]\n\n      let traceOutput = {\n        name: 'True Future',\n        x: seriesOutputX,\n        y: seriesOutputY,\n        mode: 'lines',\n        marker: {\n          size: 12,\n          line: {\n            width: 0.5\n          },\n          opacity: 1.0\n        },\n        type: 'scatter2d'\n      }\n\n      let tracePredict = {\n        name: 'Model Prediction',\n        x: seriesPredictX,\n        y: seriesPredictY,\n        mode: 'lines',\n        marker: {\n          size: 12,\n          line: {\n            width: 0.5\n          },\n          opacity: 1.0\n        },\n        type: 'scatter2d'\n      }\n\n      let layout = {\n        scene: {\n          xaxis: { title: 'X axis' },\n          yaxis: { title: 'Y axis' }\n        }\n      }\n\n      jquery(this.$refs['draw-loading']).hide()\n      jquery(this.$refs['draw']).show()\n      Plotly.newPlot(this.$refs['draw'], [traceOutput, tracePredict], layout)\n    },\n    onShowModal() {\n      if (this.seriesPlot) {\n        this.loadPage()\n      }\n    },\n    onPrevPage(event) {\n      if (this.loading === false) {\n        this.imagePage -= 1\n        if (this.imagePage < 0) {\n          this.imagePage = this.output.length - 1\n        }\n        this.loadPage()\n      }\n    },\n    onNextPage(event) {\n      if (this.loading === false) {\n        this.imagePage += 1\n        if (this.imagePage > this.output.length) {\n          this.imagePage = 0\n        }\n        this.loadPage()\n      }\n    },\n    trashActionEvent(event) {\n      jquery(this.$refs['draw']).empty()\n      this.fileChart = false\n      this.scatterPlot = true\n      this.perClassAccuracy = true\n      this.confusionMatrix = true\n      this.seriesPlot = true\n      if (this.inputTensor !== undefined) {\n        this.inputTensor.dispose()\n        delete this.inputTensor\n      }\n      if (this.outputTensor !== undefined) {\n        this.outputTensor.dispose()\n        delete this.outputTensor\n      }\n      this.output = null\n    },\n    plugActionPost(predictTensorJSON) {\n      let { normalizationData } = this.inputData\n      let predictData = global[predictTensorJSON.data['type']].from(predictTensorJSON.data['data'])\n      if (this.predictTensor !== undefined) {\n        this.predictTensor.dispose()\n      }\n      this.predictTensor = this.$tf.tensor(predictData, predictTensorJSON.shape)\n\n      if (normalizationData.outputUnitsNormalize) {\n        let { outputMin, outputMax } = normalizationData\n        let { unnormal } = utilities.tasks.unnormalizeTensor(\n          this.$tf,\n          this.predictTensor,\n          outputMin,\n          outputMax\n        )\n        this.predictTensor.dispose()\n        this.predictTensor = unnormal\n      }\n      let predictMatrix = this.predictTensor.arraySync()\n\n      let inputMatrix = this.global.inputMatrix\n      let inputShape = lodash.cloneDeep(this.global.inputShape)\n      if (this.global.evaluation !== null) {\n        inputMatrix = this.global.evaluation.inputMatrix\n      } else if (this.global.evaluation === null && this.global.training !== null) {\n        inputMatrix = this.global.training.inputMatrix\n      }\n      inputShape.unshift(inputMatrix.length)\n      if (this.inputTensor !== undefined) {\n        this.inputTensor.dispose()\n      }\n      this.inputTensor = this.$tf.tensor(inputMatrix, inputShape)\n\n      let outputMatrix = this.global.outputMatrix\n      let outputShape = lodash.cloneDeep(this.global.outputShape)\n      if (this.global.evaluation !== null) {\n        outputMatrix = this.global.evaluation.outputMatrix\n      } else if (this.global.evaluation === null && this.global.training !== null) {\n        outputMatrix = this.global.training.outputMatrix\n      }\n      outputShape.unshift(outputMatrix.length)\n      if (this.global.loss === 'sparseCategoricalCrossentropy') {\n        let outputMatrixSparse = []\n        for (let i = 0; i < outputMatrix.length; i++) {\n          let value = parseInt(outputMatrix[i][0])\n          let outputRow = []\n          for (let j = 0; j < this.predictTensor.shape[1]; j++) {\n            outputRow.push(value === j ? 1 : 0)\n          }\n          outputMatrixSparse.push(outputRow)\n        }\n        outputShape = [outputMatrixSparse.length, this.predictTensor.shape[1]]\n        outputMatrix = outputMatrixSparse\n      }\n      if (this.outputTensor !== undefined) {\n        this.outputTensor.dispose()\n      }\n      this.outputTensor = this.$tf.tensor(outputMatrix, outputShape)\n\n      let classNames = []\n      let classNamesMap = []\n\n      if (this.global.evaluation !== null && this.global.evaluation.labels.length) {\n        classNamesMap = this.global.evaluation.labels\n        classNames = Array.from(new Set(classNamesMap))\n      } else if (\n        this.global.evaluation === null &&\n        this.global.training !== null &&\n        this.global.training.labels.length\n      ) {\n        classNamesMap = this.global.training.labels\n        classNames = Array.from(new Set(classNamesMap))\n      } else {\n        for (let i = 0; i < this.global.outputShape[0]; i++) {\n          classNames.push(String(i))\n        }\n      }\n\n      this.scatterPlot = false\n      this.perClassAccuracy = false\n      this.confusionMatrix = false\n      this.seriesPlot = false\n\n      let mul = this.inputTensor.shape[1] * this.outputTensor.shape[1] * this.predictTensor.shape[1]\n      if (mul === 1) {\n        this.scatterPlot = true\n        let originalValues = []\n        let predictedValues = []\n        for (let i = 0; i < inputMatrix.length; i++) {\n          originalValues.push({\n            x: inputMatrix[i][0],\n            y: outputMatrix[i][0]\n          })\n          predictedValues.push({\n            x: inputMatrix[i][0],\n            y: predictMatrix[i][0]\n          })\n        }\n        this.$tfvis.render.scatterplot(\n          this.$refs['scatterPlot'],\n          { values: [originalValues, predictedValues], series: ['original', 'predicted'] },\n          {\n            width: 700,\n            height: 450\n          }\n        )\n        this.fileChart = true\n      }\n\n      this.classNames = classNames\n      if (this.indexSerie > -1) {\n        this.fileChart = true\n        this.seriesPlot = true\n        this.outputTensor.dispose()\n        this.predictTensor.dispose()\n      } else if (classNames.length !== 0 && this.outputTensor.shape[1] === this.predictTensor.shape[1]) {\n        this.$tf.tidy(\n          function() {\n            let tensorUse = ['perClassAccuracy', 'confusionMatrix']\n            this.perClassAccuracy = true\n            this.$tfvis.metrics\n              .perClassAccuracy(this.outputTensor.argMax(-1), this.predictTensor.argMax(-1))\n              .then(\n                function(classAccuracy) {\n                  this.$tfvis.show.perClassAccuracy(\n                    this.$refs['perClassAccuracy'],\n                    classAccuracy,\n                    classNames\n                  )\n                  this.fileChart = true\n                  tensorUse.pop()\n                  if (tensorUse.length === 0) {\n                    this.outputTensor.dispose()\n                    this.predictTensor.dispose()\n                  }\n                }.bind(this)\n              )\n\n            this.confusionMatrix = true\n            this.$tfvis.metrics\n              .confusionMatrix(this.outputTensor.argMax(-1), this.predictTensor.argMax(-1))\n              .then(\n                function(confusionMatrix) {\n                  this.$tfvis.render.confusionMatrix(\n                    this.$refs['confusionMatrix'],\n                    { values: confusionMatrix, tickLabels: classNames },\n                    {\n                      width: 700,\n                      height: 450\n                    }\n                  )\n                  this.fileChart = true\n                  tensorUse.pop()\n                  if (tensorUse.length === 0) {\n                    this.outputTensor.dispose()\n                    this.predictTensor.dispose()\n                  }\n                }.bind(this)\n              )\n          }.bind(this)\n        )\n      } else {\n        this.outputTensor.dispose()\n        this.predictTensor.dispose()\n      }\n\n      let output = []\n      for (let i = 0; i < inputMatrix.length; i++) {\n        let row = []\n        for (let j = 0; j < this.inputTensor.shape[1]; j++) {\n          row.push(inputMatrix[i][j])\n        }\n        for (let j = 0; j < this.outputTensor.shape[1]; j++) {\n          row.push(outputMatrix[i][j])\n        }\n        for (let j = 0; j < this.predictTensor.shape[1]; j++) {\n          row.push(predictMatrix[i][j])\n        }\n        if (classNamesMap.length !== 0) {\n          row.push(classNamesMap[i])\n        }\n        output.push(row)\n      }\n      this.inputTensor.dispose()\n      this.output = output\n    },\n    plugActionNext(inputTensorJSON) {\n      this.$options.sockets.onerror = function() {\n        let worker = new Worker('worker.js')\n        worker.onmessage = function(event) {\n          if (event.data[0] === 'onEnd' && event.error) {\n            worker.terminate()\n            this.plugActionEnd(event)\n          } else if (event.data[0] === 'onEnd') {\n            this.plugActionPost(event.data[1])\n            worker.terminate()\n            this.plugActionEnd(event)\n          } else if (event.data[0] === 'onError') {\n            console.error(event.data[1])\n            worker.terminate()\n            this.plugActionEnd(event)\n          }\n        }.bind(this)\n        this.global.model.save('indexeddb://model').then(\n          function() {\n            worker.postMessage(['predictor', this.getData(), inputTensorJSON])\n          }.bind(this)\n        )\n      }.bind(this)\n\n      this.$options.sockets.onopen = function() {\n        this.global.model.save(this.$tf.io.browserHTTPRequest('./api/model')).then(\n          function() {\n            this.$socket.sendObj({ data: ['predictor', this.getData(), inputTensorJSON] })\n          }.bind(this)\n        )\n      }.bind(this)\n\n      this.$options.sockets.onmessage = function(message) {\n        let event = JSON.parse(message.data)\n        if (event.data[0] === 'onEnd') {\n          this.plugActionPost(event.data[1])\n          this.$disconnect()\n          this.plugActionEnd(event)\n        } else if (event.data[0] === 'onError') {\n          console.error(event.data[1])\n          this.$disconnect()\n          this.plugActionEnd(event)\n        }\n      }.bind(this)\n\n      if (process.env.VUE_APP_WEBSOCKET_API === 'true') {\n        this.$connect()\n      } else {\n        this.$options.sockets.onerror()\n      }\n    },\n    plugActionEvent(event) {\n      this.fileChart = false\n      this.scatterPlot = true\n      this.perClassAccuracy = true\n      this.confusionMatrix = true\n      this.seriesPlot = true\n\n      let { normalizationData } = this.inputData\n      let inputMatrix = this.global.inputMatrix\n      if (this.global.evaluation !== null) {\n        inputMatrix = this.global.evaluation.inputMatrix\n      } else if (this.global.evaluation === null && this.global.training !== null) {\n        inputMatrix = this.global.training.inputMatrix\n      }\n\n      let worker = new Worker('worker.js')\n      worker.onmessage = function(event) {\n        if (event.data[0] === 'predictorActionEvent') {\n          let inputTensorJSON = event.data[1]\n          this.plugActionNext(inputTensorJSON)\n          worker.terminate()\n        }\n      }.bind(this)\n      worker.postMessage([\n        'predictorActionEvent',\n        this.getData(),\n        inputMatrix,\n        this.global.inputShape,\n        normalizationData\n      ])\n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n"],"sourceRoot":""}