{"version":3,"sources":["webpack:///./src/components/TSModelCompiler.vue?5551","webpack:///src/components/TSModelCompiler.vue","webpack:///./src/components/TSModelCompiler.vue?5289","webpack:///./src/components/TSModelCompiler.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","component","length","loading","on","$event","staticClass","plugActionDisabled","plugAction","trashActionDisabled","trashAction","imageActionDisabled","$bvModal","show","index","onToggleToolbar","toggleIcon","_v","unitsActionDisabled","_e","_s","inputSize","editActionDisabled","staticStyle","_l","item","key","model","value","callback","$$v","$set","expression","label","inputUnitsNormalize","outputSize","outputUnitsNormalize","epochSize","batchSize","percentageFormatter","validationSplit","shuffle","compilerOptimizerOptions","compilerOptimizerSelected","compilerLossOptions","compilerLossSelected","ref","staticRenderFns","name","components","mixins","mixin","data","serializable","inputUnits","outputUnits","definitions","fileChart","importData","computed","disabled","inputData","filter","layers","batchInputShape","units","dataSize","watch","inputLoading","next","$options","sockets","onerror","onopen","onmessage","onclose","methods","output","loadData","i","checked","inputMatrix","inputTensor","tensor","reshape","spriteWidth","spriteHeight","spriteChannels","inputRow","push","parseFloat","j","$tf","tensor2d","outputMatrix","outputTensor","outputRow","dataSync","max","normalizationData","inputMax","type","constructor","Object","values","shape","min","inputMin","dispose","outputMax","outputMin","width","height","callbacks","inputTensorData","outputTensorData","worker","event","error","terminate","loadLayersModel","then","save","io","browserHTTPRequest","websocket","hostname","$connect"],"mappings":"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","file":"js/chunk-2d0c4f96.85158a9b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('component-layout',{attrs:{\"component\":_vm.component,\"length\":_vm.length,\"loading\":_vm.loading},on:{\"update:component\":function($event){_vm.component=$event},\"update:length\":function($event){_vm.length=$event},\"update:loading\":function($event){_vm.loading=$event}}},[_c('b-form',{staticClass:\"form-toolbar-rtl\",attrs:{\"inline\":\"\"}},[_c('b-button',{attrs:{\"size\":\"badge\",\"disabled\":_vm.plugActionDisabled},on:{\"click\":_vm.plugAction}},[_c('b-icon',{staticClass:\"btn-icon\",attrs:{\"icon\":\"plug\"}})],1),_c('b-button',{attrs:{\"size\":\"badge\",\"disabled\":_vm.trashActionDisabled},on:{\"click\":_vm.trashAction}},[_c('b-icon',{staticClass:\"btn-icon\",attrs:{\"icon\":\"trash\"}})],1),_c('b-button',{attrs:{\"size\":\"badge\",\"disabled\":_vm.imageActionDisabled},on:{\"click\":function($event){return _vm.$bvModal.show('model-view-' + _vm.component.index)}}},[_c('b-icon',{staticClass:\"btn-icon\",attrs:{\"icon\":\"card-image\"}})],1),_c('b-button',{attrs:{\"size\":\"badge\"},on:{\"click\":_vm.onToggleToolbar}},[_c('b-icon',{attrs:{\"icon\":_vm.toggleIcon}})],1)],1),_c('b-collapse',{attrs:{\"visible\":_vm.toggleIcon === 'caret-up'}},[_c('b-form',{attrs:{\"inline\":\"\"}},[_c('div',{staticClass:\"indexInput\"},[_c('label',[_vm._v(\" Input Units \"),(!_vm.unitsActionDisabled)?_c('span',[_vm._v(\"(\"+_vm._s(_vm.inputSize)+\")\")]):_vm._e()]),_c('b-dropdown',{attrs:{\"text\":_vm.unitsActionDisabled ? 'datasetImages' : 'Columns',\"no-flip\":\"\",\"split\":\"\",\"split-variant\":\"outline-secondary\",\"block\":\"\",\"variant\":\"secondary\",\"disabled\":_vm.editActionDisabled || _vm.unitsActionDisabled}},[_c('b-dropdown-form',{staticStyle:{\"text-align\":\"left\"}},[_vm._l((_vm.inputUnits),function(item){return [_c('b-form',{key:item.key,attrs:{\"inline\":\"\"}},[_c('b-form-checkbox',{attrs:{\"options\":[true, false]},model:{value:(item.checked),callback:function ($$v) {_vm.$set(item, \"checked\", $$v)},expression:\"item.checked\"}}),_vm._v(\" \"+_vm._s(item.label)+\" \")],1)]})],2)],1)],1),_c('div',{staticClass:\"indexInput\"},[_c('label',[_vm._v(\"Input Units Normalize\")]),_c('b-form-select',{attrs:{\"options\":[true, false],\"disabled\":_vm.editActionDisabled},model:{value:(_vm.inputUnitsNormalize),callback:function ($$v) {_vm.inputUnitsNormalize=$$v},expression:\"inputUnitsNormalize\"}})],1),_c('div',{staticClass:\"indexInput\"},[_c('label',[_vm._v(\" Output Units \"),(!_vm.unitsActionDisabled)?_c('span',[_vm._v(\"(\"+_vm._s(_vm.outputSize)+\")\")]):_vm._e()]),_c('b-dropdown',{attrs:{\"text\":_vm.unitsActionDisabled ? 'datasetLabels' : 'Columns',\"no-flip\":\"\",\"split\":\"\",\"split-variant\":\"outline-secondary\",\"block\":\"\",\"variant\":\"secondary\",\"disabled\":_vm.editActionDisabled || _vm.unitsActionDisabled}},[_c('b-dropdown-form',{staticStyle:{\"text-align\":\"left\"}},[_vm._l((_vm.outputUnits),function(item){return [_c('b-form',{key:item.key,attrs:{\"inline\":\"\"}},[_c('b-form-checkbox',{attrs:{\"options\":[true, false]},model:{value:(item.checked),callback:function ($$v) {_vm.$set(item, \"checked\", $$v)},expression:\"item.checked\"}}),_vm._v(\" \"+_vm._s(item.label)+\" \")],1)]})],2)],1)],1),_c('div',{staticClass:\"indexInput\"},[_c('label',[_vm._v(\"Output Units Normalize\")]),_c('b-form-select',{attrs:{\"options\":[true, false],\"disabled\":_vm.editActionDisabled},model:{value:(_vm.outputUnitsNormalize),callback:function ($$v) {_vm.outputUnitsNormalize=$$v},expression:\"outputUnitsNormalize\"}})],1)]),_c('b-form',{attrs:{\"inline\":\"\"}},[_c('div',{staticClass:\"indexInput\"},[_c('label',[_vm._v(\"Epochs\")]),_c('b-form-spinbutton',{attrs:{\"min\":\"1\",\"placeholder\":\"--\",\"disabled\":_vm.editActionDisabled},model:{value:(_vm.epochSize),callback:function ($$v) {_vm.epochSize=$$v},expression:\"epochSize\"}})],1),_c('div',{staticClass:\"indexInput\"},[_c('label',[_vm._v(\"Batch Size\")]),_c('b-form-spinbutton',{attrs:{\"min\":\"1\",\"placeholder\":\"--\",\"disabled\":_vm.editActionDisabled},model:{value:(_vm.batchSize),callback:function ($$v) {_vm.batchSize=$$v},expression:\"batchSize\"}})],1),_c('div',{staticClass:\"indexInput\"},[_c('label',[_vm._v(\"Validation Split\")]),_c('b-form-spinbutton',{attrs:{\"min\":\"0.0\",\"max\":\"1.0\",\"step\":\"0.01\",\"formatter-fn\":_vm.percentageFormatter,\"disabled\":_vm.editActionDisabled},model:{value:(_vm.validationSplit),callback:function ($$v) {_vm.validationSplit=$$v},expression:\"validationSplit\"}})],1),_c('div',{staticClass:\"indexInput\"},[_c('label',[_vm._v(\"Shuffle\")]),_c('b-form-select',{attrs:{\"options\":[true, false],\"disabled\":_vm.editActionDisabled},model:{value:(_vm.shuffle),callback:function ($$v) {_vm.shuffle=$$v},expression:\"shuffle\"}})],1)]),_c('b-form',{attrs:{\"inline\":\"\"}},[_c('div',{staticClass:\"indexInput\"},[_c('label',[_vm._v(\"Compiler Optimizer\")]),_c('b-form-select',{attrs:{\"options\":_vm.compilerOptimizerOptions,\"disabled\":_vm.editActionDisabled},model:{value:(_vm.compilerOptimizerSelected),callback:function ($$v) {_vm.compilerOptimizerSelected=$$v},expression:\"compilerOptimizerSelected\"}})],1),_c('div',{staticClass:\"indexInput\"},[_c('label',[_vm._v(\"Compiler Loss\")]),_c('b-form-select',{attrs:{\"options\":_vm.compilerLossOptions,\"disabled\":_vm.editActionDisabled},model:{value:(_vm.compilerLossSelected),callback:function ($$v) {_vm.compilerLossSelected=$$v},expression:\"compilerLossSelected\"}})],1)])],1),_c('div',{staticStyle:{\"margin-top\":\"8px\"}}),_c('b-modal',{attrs:{\"id\":'model-view-' + _vm.component.index,\"title\":\"TS Model View\",\"static\":true,\"hide-footer\":true,\"size\":\"lg\"}},[_c('div',{ref:\"draw\"})])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <component-layout :component.sync=\"component\" :length.sync=\"length\" :loading.sync=\"loading\">\n    <b-form class=\"form-toolbar-rtl\" inline>\n      <b-button size=\"badge\" @click=\"plugAction\" :disabled=\"plugActionDisabled\">\n        <b-icon icon=\"plug\" class=\"btn-icon\"></b-icon>\n      </b-button>\n      <b-button size=\"badge\" @click=\"trashAction\" :disabled=\"trashActionDisabled\">\n        <b-icon icon=\"trash\" class=\"btn-icon\"></b-icon>\n      </b-button>\n      <b-button\n        size=\"badge\"\n        @click=\"$bvModal.show('model-view-' + component.index)\"\n        :disabled=\"imageActionDisabled\"\n      >\n        <b-icon icon=\"card-image\" class=\"btn-icon\"></b-icon>\n      </b-button>\n      <b-button size=\"badge\" @click=\"onToggleToolbar\">\n        <b-icon :icon=\"toggleIcon\"></b-icon>\n      </b-button>\n    </b-form>\n\n    <b-collapse :visible=\"toggleIcon === 'caret-up'\">\n      <b-form inline>\n        <div class=\"indexInput\">\n          <label>\n            Input Units\n            <span v-if=\"!unitsActionDisabled\">({{ inputSize }})</span>\n          </label>\n          <b-dropdown\n            :text=\"unitsActionDisabled ? 'datasetImages' : 'Columns'\"\n            no-flip\n            split\n            split-variant=\"outline-secondary\"\n            block\n            variant=\"secondary\"\n            :disabled=\"editActionDisabled || unitsActionDisabled\"\n          >\n            <b-dropdown-form style=\"text-align: left\">\n              <template v-for=\"item in inputUnits\">\n                <b-form v-bind:key=\"item.key\" inline>\n                  <b-form-checkbox v-model=\"item.checked\" :options=\"[true, false]\"></b-form-checkbox>\n                  {{ item.label }}\n                </b-form>\n              </template>\n            </b-dropdown-form>\n          </b-dropdown>\n        </div>\n\n        <div class=\"indexInput\">\n          <label>Input Units Normalize</label>\n          <b-form-select\n            v-model=\"inputUnitsNormalize\"\n            :options=\"[true, false]\"\n            :disabled=\"editActionDisabled\"\n          ></b-form-select>\n        </div>\n\n        <div class=\"indexInput\">\n          <label>\n            Output Units\n            <span v-if=\"!unitsActionDisabled\">({{ outputSize }})</span>\n          </label>\n          <b-dropdown\n            :text=\"unitsActionDisabled ? 'datasetLabels' : 'Columns'\"\n            no-flip\n            split\n            split-variant=\"outline-secondary\"\n            block\n            variant=\"secondary\"\n            :disabled=\"editActionDisabled || unitsActionDisabled\"\n          >\n            <b-dropdown-form style=\"text-align: left\">\n              <template v-for=\"item in outputUnits\">\n                <b-form v-bind:key=\"item.key\" inline>\n                  <b-form-checkbox v-model=\"item.checked\" :options=\"[true, false]\"></b-form-checkbox>\n                  {{ item.label }}\n                </b-form>\n              </template>\n            </b-dropdown-form>\n          </b-dropdown>\n        </div>\n\n        <div class=\"indexInput\">\n          <label>Output Units Normalize</label>\n          <b-form-select\n            v-model=\"outputUnitsNormalize\"\n            :options=\"[true, false]\"\n            :disabled=\"editActionDisabled\"\n          ></b-form-select>\n        </div>\n      </b-form>\n\n      <b-form inline>\n        <div class=\"indexInput\">\n          <label>Epochs</label>\n          <b-form-spinbutton\n            v-model=\"epochSize\"\n            min=\"1\"\n            placeholder=\"--\"\n            :disabled=\"editActionDisabled\"\n          ></b-form-spinbutton>\n        </div>\n\n        <div class=\"indexInput\">\n          <label>Batch Size</label>\n          <b-form-spinbutton\n            v-model=\"batchSize\"\n            min=\"1\"\n            placeholder=\"--\"\n            :disabled=\"editActionDisabled\"\n          ></b-form-spinbutton>\n        </div>\n\n        <div class=\"indexInput\">\n          <label>Validation Split</label>\n          <b-form-spinbutton\n            v-model=\"validationSplit\"\n            min=\"0.0\"\n            max=\"1.0\"\n            step=\"0.01\"\n            :formatter-fn=\"percentageFormatter\"\n            :disabled=\"editActionDisabled\"\n          ></b-form-spinbutton>\n        </div>\n\n        <div class=\"indexInput\">\n          <label>Shuffle</label>\n          <b-form-select v-model=\"shuffle\" :options=\"[true, false]\" :disabled=\"editActionDisabled\"></b-form-select>\n        </div>\n      </b-form>\n\n      <b-form inline>\n        <div class=\"indexInput\">\n          <label>Compiler Optimizer</label>\n          <b-form-select\n            v-model=\"compilerOptimizerSelected\"\n            :options=\"compilerOptimizerOptions\"\n            :disabled=\"editActionDisabled\"\n          ></b-form-select>\n        </div>\n\n        <div class=\"indexInput\">\n          <label>Compiler Loss</label>\n          <b-form-select\n            v-model=\"compilerLossSelected\"\n            :options=\"compilerLossOptions\"\n            :disabled=\"editActionDisabled\"\n          ></b-form-select>\n        </div>\n      </b-form>\n    </b-collapse>\n    <div style=\"margin-top: 8px;\"></div>\n\n    <b-modal\n      :id=\"'model-view-' + component.index\"\n      title=\"TS Model View\"\n      :static=\"true\"\n      :hide-footer=\"true\"\n      size=\"lg\"\n    >\n      <div ref=\"draw\"></div>\n    </b-modal>\n  </component-layout>\n</template>\n\n<script>\n/**\n * @license\n * Copyright 2020 Rodrigo Oshiro. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport ComponentLayout from './ComponentLayout'\nimport { mixin } from './mixin'\nimport jquery from 'jquery'\nimport * as definitions from '../config/definitions.js'\n\nexport default {\n  name: 'TSModelCompiler',\n  components: { ComponentLayout },\n  mixins: [mixin],\n  data() {\n    let data = {\n      serializable: [\n        'shuffle',\n        'epochSize',\n        'batchSize',\n        'validationSplit',\n        'inputUnits',\n        'inputUnitsNormalize',\n        'outputUnits',\n        'outputUnitsNormalize',\n        'compilerOptimizerSelected',\n        'compilerLossSelected'\n      ],\n      toggleIcon: 'caret-up',\n      shuffle: true,\n      epochSize: 0,\n      batchSize: 0,\n      validationSplit: 0,\n      inputUnits: [],\n      inputUnitsNormalize: false,\n      outputUnits: [],\n      outputUnitsNormalize: false,\n      compilerOptimizerSelected: null,\n      compilerOptimizerOptions: definitions.tf.train.options,\n      compilerLossSelected: null,\n      compilerLossOptions: definitions.tf.losses.options,\n      fileChart: false\n    }\n    return this.importData(data)\n  },\n  computed: {\n    unitsActionDisabled() {\n      let disabled = 0\n      disabled |= this.loading === true\n      if (this.inputData !== null && 'data' in this.inputData) {\n        let { data } = this.inputData\n        disabled |= 'datasetImages' in data && 'datasetLabels' in data\n      }\n      return disabled === 1\n    },\n    editActionDisabled() {\n      let disabled = 0\n      disabled |= this.loading === true\n      disabled |= this.inputSize === 0\n      disabled |= this.outputSize === 0\n      return disabled === 1\n    },\n    trashActionDisabled() {\n      return this.editActionDisabled\n    },\n    plugActionDisabled() {\n      let disabled = 0\n      disabled |= this.loading === true\n      if (!this.unitsActionDisabled && this.inputData !== null) {\n        disabled |= this.inputUnits.filter(unit => unit.checked === true).length !== this.inputSize\n        disabled |= this.outputUnits.filter(unit => unit.checked === true).length !== this.outputSize\n      }\n      return disabled === 1\n    },\n    imageActionDisabled() {\n      let disabled = 0\n      disabled |= this.fileChart === false\n      return disabled === 1\n    },\n    inputSize() {\n      let inputSize = 0\n      if (\n        this.inputData &&\n        this.inputData.model &&\n        this.inputData.model.layers &&\n        this.inputData.model.layers.length > 1\n      ) {\n        inputSize = this.inputData.model.layers[0].batchInputShape[1]\n      }\n      return inputSize\n    },\n    outputSize() {\n      let outputSize = 0\n      if (\n        this.inputData &&\n        this.inputData.model &&\n        this.inputData.model.layers &&\n        this.inputData.model.layers.length > 1\n      ) {\n        outputSize = this.inputData.model.layers[this.inputData.model.layers.length - 1].units\n      }\n      return outputSize\n    },\n    dataSize() {\n      let dataSize = 0\n      if (this.inputData && this.inputData.data && this.inputData.data.length) {\n        dataSize = this.inputData.data[0].length\n      }\n      return dataSize\n    }\n  },\n  watch: {\n    inputLoading(next, prev) {\n      if (next === false) {\n        this.trashAction()\n      }\n    },\n    loading(next, prev) {\n      if (next === false) {\n        delete this.$options.sockets.onerror\n        delete this.$options.sockets.onopen\n        delete this.$options.sockets.onmessage\n        delete this.$options.sockets.onclose\n      }\n    }\n  },\n  methods: {\n    onToggleToolbar() {\n      if (this.toggleIcon === 'caret-up') {\n        this.toggleIcon = 'caret-down'\n      } else if (this.toggleIcon === 'caret-down') {\n        this.toggleIcon = 'caret-up'\n      }\n    },\n    trashAction(event) {\n      jquery(this.$refs['draw']).empty()\n      this.fileChart = false\n      this.output = null\n      this.loadData(this.data)\n      this.loadData(this.component.data)\n      if (this.inputData && this.inputData.data && this.inputData.data.length) {\n        for (let i = 0; i < this.dataSize; i++) {\n          if (this.inputUnits.filter(unit => unit.key === i).length === 0) {\n            this.inputUnits.push({\n              key: i,\n              checked: false,\n              label: 'Column ' + i\n            })\n          }\n          if (this.outputUnits.filter(unit => unit.key === i).length === 0) {\n            this.outputUnits.push({\n              key: i,\n              checked: false,\n              label: 'Column ' + i\n            })\n          }\n        }\n      }\n    },\n    plugAction(event) {\n      this.loading = true\n      let { model, data } = this.inputData\n      let inputTensor = null\n      let outputTensor = null\n      let inputMatrix = null\n      let outputMatrix = null\n      let normalizationData = {\n        inputUnitsNormalize: this.inputUnitsNormalize,\n        outputUnitsNormalize: this.outputUnitsNormalize\n      }\n      if ('datasetImages' in data) {\n        inputMatrix = data['datasetImages']\n        // inputMatrix = inputMatrix.slice(0, inputMatrix.length / 10)\n        let size = data.spriteWidth * data.spriteHeight * data.spriteChannels\n        let length = parseInt(inputMatrix.length / size)\n        let tensor = this.$tf.tensor2d(inputMatrix, [length, size])\n        inputTensor = tensor.reshape([length, data.spriteWidth, data.spriteHeight, data.spriteChannels])\n      } else {\n        inputMatrix = []\n        for (let i = 0; i < data.length; i++) {\n          let inputRow = []\n          for (let j = 0; j < this.dataSize; j++) {\n            if (this.inputUnits.filter(unit => unit.key === j && unit.checked === true).length) {\n              inputRow.push(parseFloat(data[i][j]))\n            }\n          }\n          inputMatrix.push(inputRow)\n        }\n        inputTensor = this.$tf.tensor2d(inputMatrix)\n      }\n      if ('datasetLabels' in data) {\n        outputMatrix = data['datasetLabels']\n        // outputMatrix = outputMatrix.slice(0, outputMatrix.length / 10)\n        let size = data['datasetLabelsSize']\n        let length = parseInt(outputMatrix.length / size)\n        outputTensor = this.$tf.tensor2d(outputMatrix, [length, size])\n      } else {\n        outputMatrix = []\n        for (let i = 0; i < data.length; i++) {\n          let outputRow = []\n          for (let j = 0; j < this.dataSize; j++) {\n            if (this.outputUnits.filter(unit => unit.key === j && unit.checked === true).length) {\n              outputRow.push(parseFloat(data[i][j]))\n            }\n          }\n          outputMatrix.push(outputRow)\n        }\n        outputTensor = this.$tf.tensor2d(outputMatrix)\n      }\n      let dataSync = null\n      if (this.inputUnitsNormalize) {\n        let max = inputTensor.max()\n        let min = inputTensor.min()\n        let tensor = inputTensor.sub(min).div(max.sub(min))\n        inputTensor = tensor\n        dataSync = max.dataSync()\n        normalizationData.inputMax = {\n          data: {\n            type: dataSync.constructor.name,\n            data: Object.values(dataSync)\n          },\n          shape: dataSync.shape\n        }\n        dataSync = min.dataSync()\n        normalizationData.inputMin = {\n          data: {\n            type: dataSync.constructor.name,\n            data: Object.values(dataSync)\n          },\n          shape: dataSync.shape\n        }\n        max.dispose()\n        min.dispose()\n      }\n      if (this.outputUnitsNormalize) {\n        let max = outputTensor.max()\n        let min = outputTensor.min()\n        let tensor = outputTensor.sub(min).div(max.sub(min))\n        outputTensor = tensor\n        dataSync = max.dataSync()\n        normalizationData.outputMax = {\n          data: {\n            type: dataSync.constructor.name,\n            data: Object.values(dataSync)\n          },\n          shape: dataSync.shape\n        }\n        dataSync = min.dataSync()\n        normalizationData.outputMin = {\n          data: {\n            type: dataSync.constructor.name,\n            data: Object.values(dataSync)\n          },\n          shape: dataSync.shape\n        }\n        max.dispose()\n        min.dispose()\n      }\n\n      let callbacks = this.$tfvis.show.fitCallbacks(this.$refs['draw'], ['loss', 'mse'], {\n        width: 700,\n        height: 200,\n        callbacks: ['onEpochEnd']\n      })\n\n      let inputTensorData = inputTensor.dataSync()\n      let inputTensorJSON = {\n        data: {\n          type: inputTensorData.constructor.name,\n          data: Object.values(inputTensorData)\n        },\n        shape: inputTensor.shape\n      }\n      let outputTensorData = outputTensor.dataSync()\n      let outputTensorJSON = {\n        data: {\n          type: outputTensorData.constructor.name,\n          data: Object.values(outputTensorData)\n        },\n        shape: outputTensor.shape\n      }\n\n      this.$options.sockets.onerror = function() {\n        let worker = new Worker('worker.js')\n        worker.onmessage = function(event) {\n          if (event.data[0] === 'onEnd' && event.error) {\n            worker.terminate()\n            this.loading = false\n          } else if (event.data[0] === 'onEnd') {\n            let train = event.data[1]\n            this.$tf.loadLayersModel('indexeddb://model').then(\n              function(model) {\n                this.inputData.model = model\n                this.output = {\n                  ...this.inputData,\n                  train: train,\n                  inputTensorJSON: inputTensorJSON,\n                  outputTensorJSON: outputTensorJSON,\n                  normalizationData: normalizationData\n                }\n                worker.terminate()\n                this.loading = false\n              }.bind(this)\n            )\n          } else {\n            this.fileChart = true\n            callbacks[event.data[0]](event.data[1], event.data[2])\n          }\n        }.bind(this)\n        model.save('indexeddb://model').then(\n          function() {\n            worker.postMessage(['compiler', this.$data, inputTensorJSON, outputTensorJSON])\n            inputTensor.dispose()\n            outputTensor.dispose()\n          }.bind(this)\n        )\n      }.bind(this)\n\n      this.$options.sockets.onopen = function() {\n        model.save(this.$tf.io.browserHTTPRequest('./api/model')).then(\n          function() {\n            this.$socket.sendObj({ data: ['compiler', this.$data, inputTensorJSON, outputTensorJSON] })\n          }.bind(this)\n        )\n      }.bind(this)\n\n      this.$options.sockets.onmessage = function(message) {\n        let event = JSON.parse(message.data)\n        if (event.data[0] === 'onEnd') {\n          let train = event.data[1]\n          this.$tf.loadLayersModel('./api/model/model.json').then(\n            function(model) {\n              this.inputData.model = model\n              this.output = {\n                ...this.inputData,\n                train: train,\n                inputTensorJSON: inputTensorJSON,\n                outputTensorJSON: outputTensorJSON,\n                normalizationData: normalizationData\n              }\n              this.$disconnect()\n            }.bind(this)\n          )\n        } else {\n          this.fileChart = true\n          callbacks[event.data[0]](event.data[1], event.data[2])\n        }\n      }.bind(this)\n\n      this.$options.sockets.onclose = function() {\n        this.loading = false\n      }.bind(this)\n\n      let websocket = new URL(process.env.VUE_APP_WEBSOCKET_API).hostname\n      let hostname = new URL(window.location.href).hostname\n      if (websocket === hostname) {\n        this.$connect()\n      } else {\n        this.$options.sockets.onerror()\n      }\n      /*\n      this.$tf.loadLayersModel('./api/model/!model.json').then(\n        function(model) {\n          this.inputData.model = model\n          this.output = {\n            ...this.inputData,\n            inputTensorJSON: inputTensorJSON,\n            outputTensorJSON: outputTensorJSON,\n            normalizationData: normalizationData\n          }\n          this.loading = false\n        }.bind(this)\n      )\n      */\n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TSModelCompiler.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TSModelCompiler.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TSModelCompiler.vue?vue&type=template&id=0b63e593&scoped=true&\"\nimport script from \"./TSModelCompiler.vue?vue&type=script&lang=js&\"\nexport * from \"./TSModelCompiler.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0b63e593\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}